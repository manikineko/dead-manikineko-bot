import { readdirSync } from "fs";
import { join } from "path";
import legacy_commands from "../events/ready.js";
import aliases from "../events/ready.js";
const loadCommands = async (client, dir)=>{
    const commandFiles = readdirSync(dir).filter((file)=>file.endsWith('.js'));
    for (const file of commandFiles){
        console.log(`Loading command ${file}`);
        const command = await import(join(dir, file));
        if (command.default.name) {
            legacy_commands.set(command.default.name, command.default);
            if (command.default.aliases && Array.isArray(command.default.aliases)) {
                command.default.aliases.forEach((alias)=>aliases.set(alias, command.default.name));
            }
        }
    }
};
export default loadCommands;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxkaXNjb3JkXFxtYW5pa2luZWtvLWRpc2NvcmRcXGJvdHNcXG1hbmlraW5la28tYm90XFxzcmNcXHNlcnZpY2VzXFxsZWdhY3lfY29tbWFuZGxvYWRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWFkZGlyU3luYyB9IGZyb20gJ2ZzJztcclxuaW1wb3J0IHsgam9pbiB9IGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgeyBDbGllbnQgfSBmcm9tICdkaXNjb3JkLmpzJztcclxuaW1wb3J0IGxlZ2FjeV9jb21tYW5kcyBmcm9tICcuLi9ldmVudHMvcmVhZHknO1xyXG5pbXBvcnQgYWxpYXNlcyBmcm9tICcuLi9ldmVudHMvcmVhZHknO1xyXG5jb25zdCBsb2FkQ29tbWFuZHMgPSBhc3luYyAoY2xpZW50OiBDbGllbnQsIGRpcjogc3RyaW5nKSA9PiB7XHJcbiAgICBjb25zdCBjb21tYW5kRmlsZXMgPSByZWFkZGlyU3luYyhkaXIpLmZpbHRlcihmaWxlID0+IGZpbGUuZW5kc1dpdGgoJy5qcycpKTtcclxuXHJcbiAgICBmb3IgKGNvbnN0IGZpbGUgb2YgY29tbWFuZEZpbGVzKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYExvYWRpbmcgY29tbWFuZCAke2ZpbGV9YCk7XHJcbiAgICAgICAgY29uc3QgY29tbWFuZCA9IGF3YWl0IGltcG9ydChqb2luKGRpciwgZmlsZSkpO1xyXG4gICAgICAgIGlmIChjb21tYW5kLmRlZmF1bHQubmFtZSkge1xyXG4gICAgICAgICAgICBsZWdhY3lfY29tbWFuZHMuc2V0KGNvbW1hbmQuZGVmYXVsdC5uYW1lLCBjb21tYW5kLmRlZmF1bHQpO1xyXG4gICAgICAgICAgICBpZiAoY29tbWFuZC5kZWZhdWx0LmFsaWFzZXMgJiYgQXJyYXkuaXNBcnJheShjb21tYW5kLmRlZmF1bHQuYWxpYXNlcykpIHtcclxuICAgICAgICAgICAgICAgIGNvbW1hbmQuZGVmYXVsdC5hbGlhc2VzLmZvckVhY2goKGFsaWFzOiBzdHJpbmcpID0+IGFsaWFzZXMuc2V0KGFsaWFzLCBjb21tYW5kLmRlZmF1bHQubmFtZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbG9hZENvbW1hbmRzO1xyXG4iXSwibmFtZXMiOlsicmVhZGRpclN5bmMiLCJqb2luIiwibGVnYWN5X2NvbW1hbmRzIiwiYWxpYXNlcyIsImxvYWRDb21tYW5kcyIsImNsaWVudCIsImRpciIsImNvbW1hbmRGaWxlcyIsImZpbHRlciIsImZpbGUiLCJlbmRzV2l0aCIsImNvbnNvbGUiLCJsb2ciLCJjb21tYW5kIiwiZGVmYXVsdCIsIm5hbWUiLCJzZXQiLCJBcnJheSIsImlzQXJyYXkiLCJmb3JFYWNoIiwiYWxpYXMiXSwicmFuZ2VNYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFdBQVcsUUFBUSxLQUFLO0FBQ2pDLFNBQVNDLElBQUksUUFBUSxPQUFPO0FBRTVCLE9BQU9DLHFCQUFxQixxQkFBa0I7QUFDOUMsT0FBT0MsYUFBYSxxQkFBa0I7QUFDdEMsTUFBTUMsZUFBZSxPQUFPQyxRQUFnQkM7SUFDeEMsTUFBTUMsZUFBZVAsWUFBWU0sS0FBS0UsTUFBTSxDQUFDQyxDQUFBQSxPQUFRQSxLQUFLQyxRQUFRLENBQUM7SUFFbkUsS0FBSyxNQUFNRCxRQUFRRixhQUFjO1FBQzdCSSxRQUFRQyxHQUFHLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRUgsS0FBSyxDQUFDO1FBQ3JDLE1BQU1JLFVBQVUsTUFBTSxNQUFNLENBQUNaLEtBQUtLLEtBQUtHO1FBQ3ZDLElBQUlJLFFBQVFDLE9BQU8sQ0FBQ0MsSUFBSSxFQUFFO1lBQ3RCYixnQkFBZ0JjLEdBQUcsQ0FBQ0gsUUFBUUMsT0FBTyxDQUFDQyxJQUFJLEVBQUVGLFFBQVFDLE9BQU87WUFDekQsSUFBSUQsUUFBUUMsT0FBTyxDQUFDWCxPQUFPLElBQUljLE1BQU1DLE9BQU8sQ0FBQ0wsUUFBUUMsT0FBTyxDQUFDWCxPQUFPLEdBQUc7Z0JBQ25FVSxRQUFRQyxPQUFPLENBQUNYLE9BQU8sQ0FBQ2dCLE9BQU8sQ0FBQyxDQUFDQyxRQUFrQmpCLFFBQVFhLEdBQUcsQ0FBQ0ksT0FBT1AsUUFBUUMsT0FBTyxDQUFDQyxJQUFJO1lBQzlGO1FBQ0o7SUFDSjtBQUNKO0FBRUEsZUFBZVgsYUFBYSJ9