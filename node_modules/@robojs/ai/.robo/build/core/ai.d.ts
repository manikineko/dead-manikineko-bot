import type { BaseEngine, ChatMessage, ChatOptions as BaseChatOptions, GenerateImageOptions, GenerateImageResult } from '@/engines/base.js';
import type { GuildMember, InteractionReplyOptions, TextBasedChannel } from 'discord.js';
/**
 * The core AI interface.
 * Use this to call AI features programatically.
 */
export declare const AI: {
    chat: typeof chat;
    chatSync: typeof chatSync;
    generateImage: typeof generateImage;
    isReady: () => boolean;
};
export declare function isReplyingToUser(userId: string): boolean;
export declare let _engine: BaseEngine;
export declare function setEngine(engine: BaseEngine): void;
export declare function setEngineReady(): void;
export interface ChatReply {
    components?: InteractionReplyOptions['components'];
    embeds?: InteractionReplyOptions['embeds'];
    files?: InteractionReplyOptions['files'];
    text?: string;
}
interface ChatOptions extends Omit<BaseChatOptions, 'threadId' | 'userId'> {
    channel?: TextBasedChannel | null;
    member?: GuildMember | null;
    onReply: (reply: ChatReply) => void | Promise<void>;
}
declare function chat(messages: ChatMessage[], options: ChatOptions): Promise<void>;
declare function chatSync(messages: ChatMessage[], options: Omit<ChatOptions, 'onReply'>): Promise<ChatReply>;
declare function generateImage(options: GenerateImageOptions): Promise<GenerateImageResult>;
export {};
