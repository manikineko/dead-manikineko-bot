import { Thread } from './types.js';
import { CreateThreadOptions } from './api.js';
import { ChatFunction, ChatMessage } from '../base.js';
export interface AssistantData {
    id: string;
    object: string;
    created_at: number;
    name: string;
    description: string | null;
    model: string;
    instructions: string;
    tools: Array<{
        function?: ChatFunction;
        type: 'code_interpreter' | 'function' | 'retrieval';
    }>;
    file_ids: string[];
    metadata: Record<string, string>;
}
interface ThreadOptions {
    messages: ChatMessage[];
    threadId: string;
    threadMessage: NonNullable<CreateThreadOptions['messages']>[number];
    userId?: string | null;
}
interface ThreadResult {
    thread: Thread;
    threadCreated: boolean;
}
export declare class Assistant {
    private _data;
    constructor(data: AssistantData);
    get data(): AssistantData;
    thread(options: ThreadOptions): Promise<ThreadResult>;
    toJSON(): string;
    toString(): string;
}
export {};
