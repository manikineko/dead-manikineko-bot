import { getState, logger, setState } from 'robo.js';
import { ID_NAMESPACE } from './constants.js';
export function getSettings(guildId) {
    if (!guildId) {
        throw new Error(`Guild ID is required to get moderation settings`);
    }
    const guildSettings = getState(`settings`, {
        namespace: ID_NAMESPACE + guildId
    });
    logger.debug(`Loaded settings for guild ${guildId}:`, guildSettings ?? {});
    return guildSettings ?? {};
}
export function updateSettings(guildId, settings) {
    if (!guildId) {
        throw new Error(`Guild ID is required to update moderation settings`);
    }
    const currentSettings = getSettings(guildId);
    const newSettings = {
        ...currentSettings,
        ...settings
    };
    setState(`settings`, newSettings, {
        namespace: ID_NAMESPACE + guildId,
        persist: true
    });
    logger.debug(`Updated settings for guild ${guildId}:`, newSettings);
    return newSettings;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3JvYm8uanMvcm9iby5qcy9wYWNrYWdlcy9wbHVnaW4tbW9kdG9vbHMvc3JjL2NvcmUvc2V0dGluZ3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0U3RhdGUsIGxvZ2dlciwgc2V0U3RhdGUgfSBmcm9tICdyb2JvLmpzJ1xuaW1wb3J0IHsgSURfTkFNRVNQQUNFIH0gZnJvbSAnLi9jb25zdGFudHMuanMnXG5cbmV4cG9ydCBpbnRlcmZhY2UgR3VpbGRTZXR0aW5ncyB7XG5cdGF1ZGl0TG9nc0NoYW5uZWxJZD86IHN0cmluZ1xuXHRsb2dzQ2hhbm5lbElkPzogc3RyaW5nXG5cdG1haWxDaGFubmVsSWQ/OiBzdHJpbmdcblx0bG9ja2Rvd25Nb2RlPzogYm9vbGVhblxuXHRyZXF1aXJlQ29uZmlybWF0aW9uPzogYm9vbGVhblxuXHR0ZXN0TW9kZT86IGJvb2xlYW5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNldHRpbmdzKGd1aWxkSWQ6IHN0cmluZyB8IG51bGwpOiBHdWlsZFNldHRpbmdzIHtcblx0aWYgKCFndWlsZElkKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKGBHdWlsZCBJRCBpcyByZXF1aXJlZCB0byBnZXQgbW9kZXJhdGlvbiBzZXR0aW5nc2ApXG5cdH1cblxuXHRjb25zdCBndWlsZFNldHRpbmdzID0gZ2V0U3RhdGU8R3VpbGRTZXR0aW5ncz4oYHNldHRpbmdzYCwge1xuXHRcdG5hbWVzcGFjZTogSURfTkFNRVNQQUNFICsgZ3VpbGRJZFxuXHR9KVxuXG5cdGxvZ2dlci5kZWJ1ZyhgTG9hZGVkIHNldHRpbmdzIGZvciBndWlsZCAke2d1aWxkSWR9OmAsIGd1aWxkU2V0dGluZ3MgPz8ge30pXG5cdHJldHVybiBndWlsZFNldHRpbmdzID8/IHt9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVTZXR0aW5ncyhndWlsZElkOiBzdHJpbmcgfCBudWxsLCBzZXR0aW5nczogR3VpbGRTZXR0aW5ncyk6IEd1aWxkU2V0dGluZ3Mge1xuXHRpZiAoIWd1aWxkSWQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoYEd1aWxkIElEIGlzIHJlcXVpcmVkIHRvIHVwZGF0ZSBtb2RlcmF0aW9uIHNldHRpbmdzYClcblx0fVxuXG5cdGNvbnN0IGN1cnJlbnRTZXR0aW5ncyA9IGdldFNldHRpbmdzKGd1aWxkSWQpXG5cdGNvbnN0IG5ld1NldHRpbmdzID0ge1xuXHRcdC4uLmN1cnJlbnRTZXR0aW5ncyxcblx0XHQuLi5zZXR0aW5nc1xuXHR9XG5cblx0c2V0U3RhdGU8R3VpbGRTZXR0aW5ncz4oYHNldHRpbmdzYCwgbmV3U2V0dGluZ3MsIHtcblx0XHRuYW1lc3BhY2U6IElEX05BTUVTUEFDRSArIGd1aWxkSWQsXG5cdFx0cGVyc2lzdDogdHJ1ZVxuXHR9KVxuXHRsb2dnZXIuZGVidWcoYFVwZGF0ZWQgc2V0dGluZ3MgZm9yIGd1aWxkICR7Z3VpbGRJZH06YCwgbmV3U2V0dGluZ3MpXG5cblx0cmV0dXJuIG5ld1NldHRpbmdzXG59XG4iXSwibmFtZXMiOlsiZ2V0U3RhdGUiLCJsb2dnZXIiLCJzZXRTdGF0ZSIsIklEX05BTUVTUEFDRSIsImdldFNldHRpbmdzIiwiZ3VpbGRJZCIsIkVycm9yIiwiZ3VpbGRTZXR0aW5ncyIsIm5hbWVzcGFjZSIsImRlYnVnIiwidXBkYXRlU2V0dGluZ3MiLCJzZXR0aW5ncyIsImN1cnJlbnRTZXR0aW5ncyIsIm5ld1NldHRpbmdzIiwicGVyc2lzdCJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsUUFBUSxVQUFTO0FBQ3BELFNBQVNDLFlBQVksUUFBUSxpQkFBZ0I7QUFXN0MsT0FBTyxTQUFTQyxZQUFZQyxPQUFzQixFQUFpQjtJQUNsRSxJQUFJLENBQUNBLFNBQVM7UUFDYixNQUFNLElBQUlDLE1BQU0sQ0FBQywrQ0FBK0MsQ0FBQyxFQUFDO0lBQ25FLENBQUM7SUFFRCxNQUFNQyxnQkFBZ0JQLFNBQXdCLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDekRRLFdBQVdMLGVBQWVFO0lBQzNCO0lBRUFKLE9BQU9RLEtBQUssQ0FBQyxDQUFDLDBCQUEwQixFQUFFSixRQUFRLENBQUMsQ0FBQyxFQUFFRSxpQkFBaUIsQ0FBQztJQUN4RSxPQUFPQSxpQkFBaUIsQ0FBQztBQUMxQixDQUFDO0FBRUQsT0FBTyxTQUFTRyxlQUFlTCxPQUFzQixFQUFFTSxRQUF1QixFQUFpQjtJQUM5RixJQUFJLENBQUNOLFNBQVM7UUFDYixNQUFNLElBQUlDLE1BQU0sQ0FBQyxrREFBa0QsQ0FBQyxFQUFDO0lBQ3RFLENBQUM7SUFFRCxNQUFNTSxrQkFBa0JSLFlBQVlDO0lBQ3BDLE1BQU1RLGNBQWM7UUFDbkIsR0FBR0QsZUFBZTtRQUNsQixHQUFHRCxRQUFRO0lBQ1o7SUFFQVQsU0FBd0IsQ0FBQyxRQUFRLENBQUMsRUFBRVcsYUFBYTtRQUNoREwsV0FBV0wsZUFBZUU7UUFDMUJTLFNBQVMsSUFBSTtJQUNkO0lBQ0FiLE9BQU9RLEtBQUssQ0FBQyxDQUFDLDJCQUEyQixFQUFFSixRQUFRLENBQUMsQ0FBQyxFQUFFUTtJQUV2RCxPQUFPQTtBQUNSLENBQUMifQ==