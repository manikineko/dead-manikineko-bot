import { hasPermission } from '../core/utils.js';
import { getSettings } from '../core/settings.js';
import { logger } from 'robo.js';
export default (async (data)=>{
    const { key , plugin , type  } = data.record;
    const isSelfPlugin = plugin?.name === '@robojs/moderation';
    // Only lock down commands
    if (type !== 'command') {
        return;
    }
    // Only lock down when lockdown mode is enabled
    const interaction = data.payload[0];
    const settings = getSettings(interaction.guildId);
    if (!settings.lockdownMode) {
        return;
    }
    // Don't lock down "/mod setup" command (so that we can enable/disable lockdown mode)
    if (isSelfPlugin && key === 'mod/setup') {
        return;
    }
    // Alright, lockdown time
    if (!hasPermission(interaction, 'ModerateMembers')) {
        logger.debug(`Locking down command ${key} for guild ${interaction.guildId}`);
        await interaction.reply({
            content: `Sorry, this command is currently disabled.`,
            ephemeral: true
        });
        return {
            abort: true
        };
    }
});
export function getLockdown(guildId) {
    const settings = getSettings(guildId);
    return {
        enabled: !!settings.lockdownMode
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3JvYm8uanMvcm9iby5qcy9wYWNrYWdlcy9wbHVnaW4tbW9kdG9vbHMvc3JjL21pZGRsZXdhcmUvbG9ja2Rvd24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzUGVybWlzc2lvbiB9IGZyb20gJy4uL2NvcmUvdXRpbHMuanMnXG5pbXBvcnQgeyBnZXRTZXR0aW5ncyB9IGZyb20gJy4uL2NvcmUvc2V0dGluZ3MuanMnXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdyb2JvLmpzJ1xuaW1wb3J0IHR5cGUgeyBNaWRkbGV3YXJlRGF0YSwgTWlkZGxld2FyZVJlc3VsdCB9IGZyb20gJ3JvYm8uanMnXG5pbXBvcnQgdHlwZSB7IENoYXRJbnB1dENvbW1hbmRJbnRlcmFjdGlvbiB9IGZyb20gJ2Rpc2NvcmQuanMnXG5cbmludGVyZmFjZSBMb2NrZG93bkRhdGEge1xuXHRlbmFibGVkOiBib29sZWFuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIChkYXRhOiBNaWRkbGV3YXJlRGF0YSk6IFByb21pc2U8TWlkZGxld2FyZVJlc3VsdCB8IHZvaWQ+ID0+IHtcblx0Y29uc3QgeyBrZXksIHBsdWdpbiwgdHlwZSB9ID0gZGF0YS5yZWNvcmRcblx0Y29uc3QgaXNTZWxmUGx1Z2luID0gcGx1Z2luPy5uYW1lID09PSAnQHJvYm9qcy9tb2RlcmF0aW9uJ1xuXG5cdC8vIE9ubHkgbG9jayBkb3duIGNvbW1hbmRzXG5cdGlmICh0eXBlICE9PSAnY29tbWFuZCcpIHtcblx0XHRyZXR1cm5cblx0fVxuXG5cdC8vIE9ubHkgbG9jayBkb3duIHdoZW4gbG9ja2Rvd24gbW9kZSBpcyBlbmFibGVkXG5cdGNvbnN0IGludGVyYWN0aW9uID0gZGF0YS5wYXlsb2FkWzBdIGFzIENoYXRJbnB1dENvbW1hbmRJbnRlcmFjdGlvblxuXHRjb25zdCBzZXR0aW5ncyA9IGdldFNldHRpbmdzKGludGVyYWN0aW9uLmd1aWxkSWQpXG5cdGlmICghc2V0dGluZ3MubG9ja2Rvd25Nb2RlKSB7XG5cdFx0cmV0dXJuXG5cdH1cblxuXHQvLyBEb24ndCBsb2NrIGRvd24gXCIvbW9kIHNldHVwXCIgY29tbWFuZCAoc28gdGhhdCB3ZSBjYW4gZW5hYmxlL2Rpc2FibGUgbG9ja2Rvd24gbW9kZSlcblx0aWYgKGlzU2VsZlBsdWdpbiAmJiBrZXkgPT09ICdtb2Qvc2V0dXAnKSB7XG5cdFx0cmV0dXJuXG5cdH1cblxuXHQvLyBBbHJpZ2h0LCBsb2NrZG93biB0aW1lXG5cdGlmICghaGFzUGVybWlzc2lvbihpbnRlcmFjdGlvbiwgJ01vZGVyYXRlTWVtYmVycycpKSB7XG5cdFx0bG9nZ2VyLmRlYnVnKGBMb2NraW5nIGRvd24gY29tbWFuZCAke2tleX0gZm9yIGd1aWxkICR7aW50ZXJhY3Rpb24uZ3VpbGRJZH1gKVxuXHRcdGF3YWl0IGludGVyYWN0aW9uLnJlcGx5KHtcblx0XHRcdGNvbnRlbnQ6IGBTb3JyeSwgdGhpcyBjb21tYW5kIGlzIGN1cnJlbnRseSBkaXNhYmxlZC5gLFxuXHRcdFx0ZXBoZW1lcmFsOiB0cnVlXG5cdFx0fSlcblxuXHRcdHJldHVybiB7IGFib3J0OiB0cnVlIH1cblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9ja2Rvd24oZ3VpbGRJZDogc3RyaW5nKTogTG9ja2Rvd25EYXRhIHtcblx0Y29uc3Qgc2V0dGluZ3MgPSBnZXRTZXR0aW5ncyhndWlsZElkKVxuXG5cdHJldHVybiB7XG5cdFx0ZW5hYmxlZDogISFzZXR0aW5ncy5sb2NrZG93bk1vZGVcblx0fVxufVxuIl0sIm5hbWVzIjpbImhhc1Blcm1pc3Npb24iLCJnZXRTZXR0aW5ncyIsImxvZ2dlciIsImRhdGEiLCJrZXkiLCJwbHVnaW4iLCJ0eXBlIiwicmVjb3JkIiwiaXNTZWxmUGx1Z2luIiwibmFtZSIsImludGVyYWN0aW9uIiwicGF5bG9hZCIsInNldHRpbmdzIiwiZ3VpbGRJZCIsImxvY2tkb3duTW9kZSIsImRlYnVnIiwicmVwbHkiLCJjb250ZW50IiwiZXBoZW1lcmFsIiwiYWJvcnQiLCJnZXRMb2NrZG93biIsImVuYWJsZWQiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLGFBQWEsUUFBUSxtQkFBa0I7QUFDaEQsU0FBU0MsV0FBVyxRQUFRLHNCQUFxQjtBQUNqRCxTQUFTQyxNQUFNLFFBQVEsVUFBUztBQVFoQyxlQUFlLENBQUEsT0FBT0MsT0FBMkQ7SUFDaEYsTUFBTSxFQUFFQyxJQUFHLEVBQUVDLE9BQU0sRUFBRUMsS0FBSSxFQUFFLEdBQUdILEtBQUtJLE1BQU07SUFDekMsTUFBTUMsZUFBZUgsUUFBUUksU0FBUztJQUV0QywwQkFBMEI7SUFDMUIsSUFBSUgsU0FBUyxXQUFXO1FBQ3ZCO0lBQ0QsQ0FBQztJQUVELCtDQUErQztJQUMvQyxNQUFNSSxjQUFjUCxLQUFLUSxPQUFPLENBQUMsRUFBRTtJQUNuQyxNQUFNQyxXQUFXWCxZQUFZUyxZQUFZRyxPQUFPO0lBQ2hELElBQUksQ0FBQ0QsU0FBU0UsWUFBWSxFQUFFO1FBQzNCO0lBQ0QsQ0FBQztJQUVELHFGQUFxRjtJQUNyRixJQUFJTixnQkFBZ0JKLFFBQVEsYUFBYTtRQUN4QztJQUNELENBQUM7SUFFRCx5QkFBeUI7SUFDekIsSUFBSSxDQUFDSixjQUFjVSxhQUFhLG9CQUFvQjtRQUNuRFIsT0FBT2EsS0FBSyxDQUFDLENBQUMscUJBQXFCLEVBQUVYLElBQUksV0FBVyxFQUFFTSxZQUFZRyxPQUFPLENBQUMsQ0FBQztRQUMzRSxNQUFNSCxZQUFZTSxLQUFLLENBQUM7WUFDdkJDLFNBQVMsQ0FBQywwQ0FBMEMsQ0FBQztZQUNyREMsV0FBVyxJQUFJO1FBQ2hCO1FBRUEsT0FBTztZQUFFQyxPQUFPLElBQUk7UUFBQztJQUN0QixDQUFDO0FBQ0YsQ0FBQSxFQUFDO0FBRUQsT0FBTyxTQUFTQyxZQUFZUCxPQUFlLEVBQWdCO0lBQzFELE1BQU1ELFdBQVdYLFlBQVlZO0lBRTdCLE9BQU87UUFDTlEsU0FBUyxDQUFDLENBQUNULFNBQVNFLFlBQVk7SUFDakM7QUFDRCxDQUFDIn0=